{"version":3,"sources":["hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIndegredient.module.css","components/Burger/Burger.module.css","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Message/Message.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["WithErrorHandler","WrappedComponent","axios","props","state","error","errorBoolean","errorConfirmedHandler","setState","console","log","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","this","open","transition","animation","duration","raised","vertical","compact","style","left","position","top","zIndex","onDismiss","floating","negative","icon","header","content","message","Component","module","exports","BurgerIngredient","ingredient","type","className","classes","BreadBottom","BreadTop","Seed1","Seed2","Meat","Cheese","Bacon","Salad","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","CheckoutSummary","Responsive","as","Grid","textAlign","marginTop","Row","Column","Header","Button","onClick","cancelcheckout","size","checkout","color","MessageModal","TransitionablePortal","messopen","Segment","Message","dismiss","success","ContactData","orderForm","firstname","value","valid","invalid","touched","validation","required","email","isEmail","street","postalCode","country","deliveryMethod","submitted","formIsValid","ContactDataHandler","event","preventDefault","formData","formElementIdentifier","order","ings","price","totprice","orderData","userId","onOrderBurger","token","successConfirmedHandler","onDismissOpenSuc","handlerForm","e","name","singleorderEle","updateObject","checkValid","orderFF","formisvalid","inputIdentifier","Succmesg","openSuc","posted","loaded","statusBoolean","status","statusError","Successmessage","Errormessage","Form","loading","onSubmit","Group","widths","Input","label","placeholder","onChange","Dropdown","openOnFocus","closeOnEscape","fluid","search","selection","options","flag","text","Select","disabled","connect","burgerbuilder","totalPrice","auth","dispatch","burgerbuilderActions","Checkout","cancelcheckoutHandler","history","goBack","checkoutHandler","replace","summary","to","purchasedRedirect","purchased","path","match","component"],"mappings":"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","file":"static/js/9.29a1a91c.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Segment,Message,TransitionablePortal} from 'semantic-ui-react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\n\r\nconst WithErrorHandler = (WrappedComponent,axios) =>{\r\n\r\n  return class extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      console.log('CONSTRUCTOR');\r\n      this.reqInterceptor =  axios.interceptors.request.use(req =>{\r\n        this.setState({error:null,errorBoolean:false});\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(res=>res,error=>{\r\n        this.setState({error:error,errorBoolean:true});\r\n      })\r\n    }\r\n  \tstate = {\r\n  \t\terror:null,\r\n  \t\terrorBoolean:false\r\n  \t}\r\n    \r\n\r\n  \t // componentDidMount(){\r\n  \t \t\r\n  \t // }\r\n\r\n     componentWillUnmount(){\r\n        axios.interceptors.request.eject(this.reqInterceptor);\r\n        axios.interceptors.request.eject(this.resInterceptor);\r\n     }\r\n\r\n  \t errorConfirmedHandler = () =>{\r\n  \t \tthis.setState({error:null,errorBoolean:false});\r\n  \t }\r\n  \trender(){\r\n\r\n  \t\treturn (\r\n\t\t\t<Aux>\r\n\t\t\t   <TransitionablePortal open={this.state.errorBoolean} transition={{animation:'fly right',duration:1000}}>\r\n                 <Segment raised vertical compact  style={{ \r\n                 \tleft:'5%',\r\n                 \tposition:'fixed',\r\n                 \ttop:'10%',\r\n                 \tzIndex:1000,\r\n                 }}>\r\n                 <Message \r\n                 onDismiss={this.errorConfirmedHandler}\r\n                 floating \r\n                 negative icon='exclamation triangle' \r\n                 header=\"We're sorry an error occured\" \r\n                 content={this.state.error ? this.state.error.message: null} />\r\n                </Segment>\r\n               </TransitionablePortal>\r\n\t\t\t   <WrappedComponent {...this.props} />\r\n\t\t\t</Aux>\r\n\t\t);\r\n  \t};\r\n  }  \r\n}\r\n\r\nexport default WithErrorHandler;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIndegredient_BreadBottom__3D2Ei\",\"BreadTop\":\"BurgerIndegredient_BreadTop__20Exo\",\"Seeds1\":\"BurgerIndegredient_Seeds1__J0kD0\",\"Seeds2\":\"BurgerIndegredient_Seeds2__2L9Nu\",\"Meat\":\"BurgerIndegredient_Meat__npV25\",\"Cheese\":\"BurgerIndegredient_Cheese__j1EKv\",\"Salad\":\"BurgerIndegredient_Salad__cD7M0\",\"Bacon\":\"BurgerIndegredient_Bacon__29wmD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__YRgdM\"};","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport classes from'./BurgerIndegredient.module.css';\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>\r\n            break;\r\n        case ('bread-top'):\r\n        ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seed1}></div>\r\n                    <div className={classes.Seed2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div  className={classes.Cheese}></div>\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>\r\n            break;\r\n        default:\r\n            ingredient = null\r\n    }\r\n    return ingredient;\r\n};\r\n\r\n\r\n// BurgerIngredient.PropTypes = {\r\n//     type: PropTypes.string.isRequired\r\n// };\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n//import {Container} from 'semantic-ui-react';\r\nimport BurgerIngredient from  './BurgerIngredient/BurgerIngredient';\r\nimport classes from'./Burger.module.css';\r\n\r\nconst Burger = props => {\r\n   let transformedIngredients = Object.keys(props.ingredients)\r\n        .map((igKey) =>{\r\n            return [...Array(props.ingredients[igKey])].map((_,i)=> {\r\n                return <BurgerIngredient key={igKey+i} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((arr,el)=>{\r\n          return arr.concat(el)\r\n        }, []);\r\n    if(transformedIngredients.length === 0){\r\n       transformedIngredients = <h5>Please start adding ingredients!</h5>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n          <BurgerIngredient type=\"bread-top\" />\r\n          {transformedIngredients}\r\n          <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(Burger);","import React from 'react';\r\nimport { Button,Grid,Header,Responsive} from 'semantic-ui-react';\r\nimport Burger from '../../Burger/Burger';\r\n\r\n\r\n\r\n\r\nconst CheckoutSummary = (props)=>{\r\n\t\t   \r\n\t\treturn (\r\n\t\t\t<Responsive as={Grid} textAlign=\"center\" style={{ marginTop: \"2em\"}}>\r\n                <Grid.Row>\r\n                <Grid.Column>\r\n                   <Header as=\"h2\">We hope it tastes great</Header>\r\n\t\t\t\t\t<Burger ingredients={props.ingredients}/>\r\n\t\t            <Button onClick={props.cancelcheckout}  size='medium' content='CANCEL'/>\r\n\t\t            <Button onClick={props.checkout} size='medium'  color='green' content='CONTINUE'/>\r\n                </Grid.Column>\r\n             </Grid.Row>\r\n \t\t\t</Responsive>\r\n\t\t);\r\n\t}\r\n\r\nexport default CheckoutSummary;\r\n","import React from 'react';\r\nimport {Segment,Message,TransitionablePortal} from 'semantic-ui-react';\r\nconst MessageModal = (props) => {\r\n\r\n\treturn (\r\n\r\n\t\t<TransitionablePortal open={props.messopen} transition={{animation:'fly right',duration:1000}}>\r\n           <Segment raised vertical compact  style={{ \r\n                left:'5%',\r\n                position:'fixed',\r\n                top:'10%',\r\n                zIndex:1000,\r\n             }}>\r\n             <Message \r\n             onDismiss={props.dismiss}\r\n             floating \r\n             success\r\n             header=\"Ordered Successfully\" \r\n             content='Your Burger was ordered sucessfully' />\r\n            </Segment>\r\n        </TransitionablePortal>\r\n\t\t);\r\n\r\n}\r\n\r\nexport default MessageModal;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n\r\n    Grid,\r\n    Responsive,\r\n    Form,\r\n    Message,\r\n    Header,\r\n    Segment,\r\n    Dropdown\r\n    } from 'semantic-ui-react';\r\n\r\nimport axios from '../../../axios';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\nimport MessageModal from \"../../../components/UI/Message/Message\";\r\nimport WithErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport * as burgerbuilderActions from '../../../store/actions/burgerAction/burgerIndex';\r\nimport {updateObject,checkValid} from '../../../shared/utility';\r\n\r\n\r\n\r\nclass ContactData extends Component {\r\n\t\r\n\tstate ={\r\n\t\torderForm:{\r\n\t\t\tfirstname:{\r\n\t\t\t\tvalue:'',\r\n\t\t\t\tvalid:false,\r\n\t\t\t\tinvalid:false,\r\n        touched:false,\r\n\t\t\t\tvalidation:{\r\n\t\t\t\t\trequired:true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\temail:{\r\n\t\t\t\tvalue:'',\r\n\t\t\t\tvalid:false,\r\n\t\t\t\tinvalid:false,\r\n        touched:false,\r\n\t\t\t\tvalidation:{\r\n\t\t\t\t\trequired:true,\r\n          isEmail:true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstreet:{\r\n\t\t\t\tvalue:'',\r\n\t\t\t\tvalid:false,\r\n\t\t\t\tinvalid:false,\r\n        touched:false,\r\n\t\t\t\tvalidation:{\r\n\t\t\t\t\trequired:true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tpostalCode:{\r\n\t\t\t\tvalue:'',\r\n\t\t\t\tvalid:false,\r\n\t\t\t\tinvalid:false,\r\n        touched:false,\r\n\t\t\t\tvalidation:{\r\n\t\t\t\t\trequired:true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t    country:{\r\n\t\t    \tvalue:'',\r\n\t\t    \tvalid:false,\r\n\t\t\t\t  invalid:false,\r\n          touched:false,\r\n\t\t    \tvalidation:{\r\n\t\t\t\t\trequired:true\r\n\t\t\t\t}\r\n\t\t    },\r\n\t        deliveryMethod:{\r\n\t        \tvalue:'',\r\n\t        \tvalid:false,\r\n            invalid:false,\r\n            touched:false,\r\n\t        \tvalidation:{\r\n\t\t\t\t\trequired:true\r\n\t\t\t\t}\r\n\t       }\r\n\t    },\r\n\r\n        submitted: false,\r\n        // loaded:false,\r\n        // openSuc:false,\r\n        error: false,\r\n\r\n        formIsValid:false\r\n\r\n\t}\r\n\r\n\tContactDataHandler = (event) =>{\r\n\t\tevent.preventDefault();\r\n        const formData = {};\r\n        for(let formElementIdentifier in this.state.orderForm){\r\n           formData[formElementIdentifier] = this.state.orderForm[formElementIdentifier].value;\r\n        }\r\n        const order = {\r\n             ingredients:this.props.ings,\r\n             price:this.props.totprice,\r\n             orderData:formData,\r\n             userId:this.props.userId\r\n            }\r\n\r\n        this.props.onOrderBurger(order,this.props.token);\r\n        // axios.post('/orders.json',order) \r\n        //      .then(response =>{\r\n        //          console.log(response,'RESPONSE DATA')\r\n        //          this.setState({loaded:false,openSuc:false});\r\n        //             if (response){\r\n        //                 if (response.status === 200) {\r\n        //                     this.setState({openSuc:true,status:200,loaded:false});\r\n        //                     this.props.history.push('/');\r\n\r\n        //                 }else{\r\n        //                     this.setState({loaded:false,openSuc:false,status:400});\r\n        //                 }\r\n        //          }\r\n        //    })\r\n        //     .catch(error=>{\r\n        //           console.log(error,'Error DATA')\r\n        //            this.setState({loaded:false,status:400,openSuc:false});\r\n        //    })\r\n        \r\n\t}\r\n\tsuccessConfirmedHandler = () =>{\r\n        //this.setState({openSuc:false});\r\n        this.props.onDismissOpenSuc();\r\n\r\n    }\r\n    handlerForm = (e,{name,value})  => {  \t\t\r\n  \t\tconst singleorderEle =  updateObject(this.state.orderForm[name],{\r\n        value: value,\r\n        valid: checkValid(value,this.state.orderForm[name].validation),\r\n        invalid: !checkValid(value,this.state.orderForm[name].validation),\r\n        touched:true\r\n      });\r\n       const orderFF = updateObject(this.state.orderForm,{\r\n        [name]: singleorderEle\r\n       });\r\n  \t\tlet formisvalid = true;\r\n\r\n  \t\tfor(let inputIdentifier in orderFF){\r\n  \t\t\tformisvalid = orderFF[inputIdentifier].valid && formisvalid;\r\n  \t\t}\r\n\r\n  \t\tthis.setState({orderForm:orderFF,formIsValid:formisvalid});\r\n    \t}\r\n\trender() {\r\n\t\tconst Succmesg = this.props.openSuc ? (<MessageModal messopen={this.state.openSuc} dismiss={this.successConfirmedHandler} />):null;\r\n           \r\n\r\n        const posted = this.props.loaded ? true : false;\r\n\t\t    const statusBoolean = this.props.status === 200 ? true : false;\r\n        const statusError = this.props.status ===  400 ? true : false;\r\n\r\n        const Successmessage = (<Message success header='Form Completed' content=\"Posted contents successfully!!\" />);\r\n        const Errormessage = (<Message error header=\"Something went wrong\" content=\"Check your connection properly\" />);\r\n       //  const flag = (item) => Flag name={item.countrycode} />\r\n        const options = [\r\n           {key: 'ng' ,flag:'ng', text:'Nigeria',value:'nigeria'},\r\n           {key: 'ao' ,flag:'ao', text:'Angola',value:'angola'},\r\n           {key: 'dz' ,flag:'dz', text:'Algeria',value:'algeria'},\r\n           {key: 'us' ,flag:'us', text:'America',value:'america'},\r\n           {key: 'ad' ,flag:'ad', text:'Andorra',value:'togo'},\r\n           {key: 'ar' ,flag:'ar', text:'Argentina',value:'togo'},\r\n           {key: 'at' ,flag:'at', text:'Austria',value:'togo'},\r\n           {key: 'bj' ,flag:'bj', text:'Benin',value:'togo'},\r\n        ];\r\n\r\n        const deliveryoption = [\r\n           {key: 'cptest' , text:'Cheapest', value:'cheapest'},\r\n           {key: 'ftest' , text:'Fastest',value:'fastest'},\r\n\r\n\r\n        ];\r\n\t\treturn (\r\n\t\t\t<Aux>\r\n\t\t\t{Succmesg}\r\n\t\t\t<Responsive as={Segment}  style={{ marginTop: \"1em\"}}>\r\n                <Grid   textAlign=\"center\" >\r\n                <Grid.Row>\r\n                  <Grid.Column>\r\n                   <Header> Contact Details </Header>\r\n                   <Form loading={posted} onSubmit={this.ContactDataHandler} success={statusBoolean} error={statusError}>\r\n                     <Form.Group widths='equal'>\r\n                        <Form.Input  label='Userame' placeholder='Userame' value={this.state.orderForm['firstname']['value']} error={this.state.orderForm['firstname']['invalid']} name=\"firstname\" onChange={this.handlerForm}  />  \r\n                        <Form.Input  label='Email' placeholder='Email' value={this.state.orderForm['email']['value']} name=\"email\" error={this.state.orderForm['email']['invalid']}  onChange={this.handlerForm} />  \r\n                        <Form.Input  label='Address' placeholder='Address' value={this.state.orderForm['street']['value']} name=\"street\"error={this.state.orderForm['street']['invalid']}  onChange={this.handlerForm} />  \r\n                        <Form.Input  label='Postal Code' placeholder='Postal Code' value={this.state.orderForm['postalCode']['value']} name=\"postalCode\"  error={this.state.orderForm['postalCode']['invalid']}  onChange={this.handlerForm} />  \r\n                     </Form.Group>\r\n                    <Form.Group widths='equal'>\r\n                        <Dropdown  placeholder=\"Select Country\" openOnFocus closeOnEscape fluid search selection value={this.state.orderForm['country']['value']} name=\"country\" error={this.state.orderForm['country']['invalid']} options={options} onChange={this.handlerForm}/>\r\n                        <Form.Select  label='Delivery' options={deliveryoption}  placeholder='Select Method' value={this.state.orderForm['deliveryMethod']['value']} name=\"deliveryMethod\" error={this.state.orderForm['deliveryMethod']['invalid']} onChange={this.handlerForm}/> \r\n                     </Form.Group>\r\n                     { statusBoolean ? Successmessage : statusError ? Errormessage : null}\r\n                    <Form.Button color=\"brown\" size='medium' disabled={!this.state.formIsValid}> ORDER </Form.Button>\r\n\r\n                    </Form>\r\n                   </Grid.Column>\r\n            </Grid.Row>\r\n            </Grid>\r\n      </Responsive>\r\n      </Aux>\r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings:state.burgerbuilder.ingredients,\r\n        totprice:state.burgerbuilder.totalPrice,\r\n        loaded:state.order.loaded,\r\n        openSuc:state.order.openSuc,\r\n        status:state.order.status,\r\n        token:state.auth.token,\r\n        userId:state.auth.userId\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onOrderBurger:(orderData,token) => dispatch(burgerbuilderActions.purchaseBurger(orderData,token)),\r\n        onDismissOpenSuc:() => dispatch(burgerbuilderActions.dismissOpenSucModal())\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithErrorHandler(ContactData,axios));\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//DO A CUSTOM VALIDATION WITH THIS TECHNIQUES \r\n// CHECKVALIDITY FUNCTION THAT WRAP \r\n// orderForm:{\r\n// \t\t\tfirstname:{\r\n// \t\t\t\tvalue:'',\r\n// \t\t\t\tvalid:false\r\n// \t\t\t\tminLength:0,\r\n// \t\t\t\trequired:true\r\n// \t\t\t},\r\n// \t\t\temail:{\r\n// \t\t\t\tvalue:'',\r\n// \t\t\t\tvalid:false\r\n// \t\t\t\tminLength:0,\r\n// \t\t\t\trequired:true\r\n// \t\t\t},\r\n// \t\t\tstreet:{\r\n// \t\t\t\tvalue:'',\r\n// \t\t\t\tvalid:false\r\n// \t\t\t\tminLength:0,\r\n// \t\t\t\trequired:true\r\n// \t\t\t},\r\n// \t\t\tpostalCode:{\r\n// \t\t\t\tvalue:'',\r\n// \t\t\t\tvalid:false\r\n// \t\t\t\tminLength:0,\r\n// \t\t\t\trequired:true\r\n// \t\t\t},,\r\n// \t\t    country:{\r\n// \t\t\t\tvalue:'',\r\n// \t\t\t\tvalid:false\r\n// \t\t\t\tminLength:0,\r\n// \t\t\t\trequired:true\r\n// \t\t\t},,\r\n// \t        deliveryMethod:{\r\n// \t\t\t\tvalue:'fastest',\r\n// \t\t\t\tvalid:false\r\n// \t\t\t\tminLength:0,\r\n// \t\t\t\trequired:true\r\n// \t\t\t},\r\n// \t    },","import React, { Component } from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport ContactData from './ContactData/ContactData';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport axios from '../../axios';\r\n\r\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\n\r\n\r\n\r\nclass Checkout extends Component {\r\n\t\r\n\tcancelcheckoutHandler = () => {\r\n\t\tthis.props.history.goBack();\r\n\t}\r\n\r\n\tcheckoutHandler  = () =>{\r\n\t\tthis.props.history.replace('/checkout/contact');\r\n\r\n\t}\r\n\trender() {\r\n\t\tlet summary = <Redirect to=\"/\" />\r\n\t\tif(this.props.ings){\r\n\t\t\tconst purchasedRedirect = this.props.purchased ? <Redirect to=\"/\" /> : null;\r\n\t\t\tsummary = (\r\n\t\t\t\t<Aux>\r\n\t\t\t\t\t{purchasedRedirect}\r\n\t\t\t\t\t<CheckoutSummary \r\n\t\t\t\t\tcancelcheckout={this.cancelcheckoutHandler}\r\n\t\t\t\t\tcheckout={this.checkoutHandler}\r\n\t\t\t\t\tingredients={this.props.ings}/>\r\n\t\t            <Route path={this.props.match.path + '/contact'} component={ContactData}  />\r\n\t\t\t\t</Aux>\r\n\r\n              );\r\n\t\t}\r\n\t\treturn summary;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings:state.burgerbuilder.ingredients,\r\n        purchased:state.order.purchased\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(WithErrorHandler(Checkout,axios));"],"sourceRoot":""}