{"version":3,"sources":["components/PostWrapper/PostWrapper.module.css","components/PostWrapper/Post/Post.js","components/PostWrapper/FullPost/FullPost.js","components/PostWrapper/PostWrapper.js","containers/Blog/Blog.js"],"names":["module","exports","Post","props","Responsive","onlyMobile","Grid","Column","style","marginBottom","Card","link","fluid","raised","header","title","meta","author","description","onClick","clicked","minWidth","width","FullPost","state","loadedPost","loading","deletePostHandler","axios","delete","match","params","id","then","response","console","log","catch","error","alert","this","setState","loadData","prop","get","data","post","Segment","Placeholder","Line","as","marginTop","Row","textAlign","centered","Content","Header","Meta","Description","body","extra","Button","negative","content","Component","PostWrapper","posts","SelectedPostId","postSelectorHandler","history","push","updatedPosts","slice","map","identity","key","Dimmer","Dimmable","Container","paddingTop","inverted","active","Loader","size","length","className","classes","Posts","path","url","exact","component","NewPost","React","lazy","Blog","visible","activeItem","auth","activeMenuItem","e","name","setTimeout","Menu","fixed","color","position","Item","href","to","NavLink","Icon","Sidebar","Pushable","animation","direction","vertical","onHide","unauth","pathname","hash","search","Pusher","dimmed","height","fallback","render"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,MAAQ,6B,uOC2BXC,EAlBF,SAACC,GAAD,OAEA,kBAAC,WAAD,KACG,kBAACC,EAAA,EAAeA,IAAWC,WACtB,kBAACC,EAAA,EAAKC,OAAN,CAAaC,MAAO,CAAEC,aAAc,UAChC,kBAACC,EAAA,EAAD,CAAMC,MAAI,EAAEC,OAAK,EAACC,QAAM,EAACC,OAAQX,EAAMY,MAAOC,KAAMb,EAAMc,OAASC,YAAY,GAAGC,QAAShB,EAAMiB,YAIzG,kBAAChB,EAAA,EAAD,CAAYiB,SAAU,KAClB,kBAACf,EAAA,EAAKC,OAAN,CAAae,MAAO,EAAGd,MAAO,CAAEC,aAAc,UAC1C,kBAACC,EAAA,EAAD,CAAMG,QAAM,EAACF,MAAI,EAACG,OAAQX,EAAMY,MAAOC,KAAMb,EAAMc,OAASC,YAAY,GAAGC,QAAShB,EAAMiB,c,2BCkFpGG,E,2MAtFXC,MAAO,CACHC,WAAa,KACbC,SAAS,G,EAkCbC,kBAAoB,WAChBC,IAAMC,OAAO,UAAW,EAAK1B,MAAM2B,MAAMC,OAAOC,IAC/CC,MAAK,SAAAC,GACGC,QAAQC,IAAIF,EAAS,oBAElBG,OAAM,SAAAC,GACLC,MAAM,gBAAgBD,O,mFApCnCE,KAAKC,SAAS,CAACf,SAAQ,IACvBc,KAAKE,a,2CAKPF,KAAKE,a,iCAIE,IAAD,OACFC,EAAOH,KAAKrC,MAAM2B,MAAMC,OAAOC,GAC5BW,IACGH,KAAKhB,MAAMC,YAAee,KAAKhB,MAAMC,WAAWO,MAAQW,GACxDf,IAAMgB,IAAI,UAAWD,GACfV,MAAK,SAAAC,GACAA,GACF,EAAKO,SAAS,CAAChB,WAAWS,EAASW,UAGxCR,OAAM,SAAAC,GACJ,EAAKG,SAAS,CAACf,SAAQ,IACvBa,MAAM,gBAAgBD,S,+BAoBpC,IAAIQ,EAAQ,kBAACC,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,KAAa,kBAACA,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,MAAmB,kBAACD,EAAA,EAAYC,KAAb,QA+B1J,OA3BKT,KAAKrC,MAAMuB,SACRc,KAAKhB,MAAMC,aACXqB,EACA,kBAAC1C,EAAA,EAAD,CAAY8C,GAAI5C,IAAOE,MAAO,CAAE2C,UAAW,QACnC,kBAAC7C,EAAA,EAAK8C,IAAN,CAAUC,UAAU,UAClB,kBAAC/C,EAAA,EAAKC,OAAN,KACA,kBAACG,EAAA,EAAD,CAAME,OAAK,EAAC0C,UAAQ,GAClB,kBAAC5C,EAAA,EAAK6C,QAAN,KACE,kBAAC7C,EAAA,EAAK8C,OAAN,KAAchB,KAAKhB,MAAMC,WAAWV,OACpC,kBAACL,EAAA,EAAK+C,KAAN,aACA,kBAAC/C,EAAA,EAAKgD,YAAN,KACKlB,KAAKhB,MAAMC,WAAWkC,OAG7B,kBAACjD,EAAA,EAAK6C,QAAN,CAAcK,OAAK,GAChB,kBAACC,EAAA,EAAD,CAAQC,UAAQ,EAACC,QAAQ,SAAS5C,QAASqB,KAAKb,0BAYhEmB,M,GAlFQkB,a,oPC0ERC,E,2MA7EdzC,MAAQ,CACD0C,MAAM,GACNC,eAAe,KACf7B,OAAM,EACNZ,SAAQ,G,EA0BZ0C,oBAAsB,SAACpC,GAEnB,EAAK7B,MAAMkE,QAAQC,KAAK,eAAiBtC,I,mFAzBxB,IAAD,OACnBQ,KAAKC,SAAS,CAACf,SAAQ,IACpBE,IAAMgB,IAAI,UACJX,MAAK,SAAAC,GACF,GAAGA,EAAS,CACX,IACMqC,EADQrC,EAASW,KAAK2B,MAAM,EAAE,GACRC,KAAI,SAAA3B,GAC7B,O,yVAAO,CAAP,GACOA,EADP,CAEI7B,OAAO,YAGd,EAAKwB,SAAS,CAACf,SAAQ,EAAMwC,MAAMK,QAGzClC,OAAM,SAAAC,GACR,EAAKG,SAAS,CAACH,OAAM,EAAKZ,SAAQ,IAC/Ba,MAAM,gBAAgBD,Q,+BAYxB,IAAD,OACD4B,EAAQ1B,KAAKhB,MAAM0C,MAAMO,KAAI,SAAA3B,GAC1B,OAAO,kBAAC,EAAD,CAAM4B,SAAU5B,EAAKd,GAAI2C,IAAK7B,EAAKd,GAAKjB,MAAO+B,EAAK/B,MAAOE,OAAQ6B,EAAK7B,OAAQG,QAAS,kBAAI,EAAKgD,oBAAoBtB,EAAKd,UAEvI+B,EAAU,KAkBb,OAhBKA,EADFvB,KAAKhB,MAAME,QAEH,kBAACkD,EAAA,EAAOC,SAAR,CAAiB3B,GAAI4B,IAAWzB,UAAU,SAAS7C,MAAO,CAACuE,WAAW,QACjE,kBAACH,EAAA,EAAD,CAAQI,UAAQ,EAACC,QAAM,GAClB,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAQH,UAAQ,MAM/CxC,KAAKhB,MAAMc,MACF,yBAAK9B,MAAO,CAAC6C,UAAU,WAAW,kBAACG,EAAA,EAAD,CAAQN,GAAG,MAAX,oBAA0C,4EAE7EgB,EAAMkB,OAAS,EAAIlB,EAAQ,KAKrC,kBAAC,WAAD,KACD,6BAASmB,UAAWC,IAAQC,OAChB,kBAACjF,EAAA,EAAD,KACC,kBAACA,EAAA,EAAK8C,IAAN,KACEW,KAIN,iCACE,kBAAC,IAAD,CAAOyB,KAAMhD,KAAKrC,MAAM2B,MAAM2D,IAAI,OAAQC,OAAK,EAACC,UAAWpE,U,GArEhDyC,aCYpB4B,EAAUC,IAAMC,MAAK,kBAAK,wDAE1BC,E,2MACFvE,MAAQ,CACJwE,SAAQ,EACRC,WAAY,OACZC,MAAK,G,EAGTC,eAAiB,SAACC,EAAD,GAAc,IAAVC,EAAS,EAATA,KACnB,EAAK5D,SAAS,CAACwD,WAAWI,EAAKL,SAAQ,K,wEAG/B,IAAD,OASL,OAJAM,YAAW,WACP,EAAK7D,SAAS,CAACyD,MAAK,MACtB,MAGE,kBAAC,IAAD,KAAK,6BACD,kBAACK,EAAA,EAAD,CAAMC,MAAM,MAAMxB,UAAQ,EAACyB,MAAM,SAC7B,kBAACrG,EAAA,EAAD,CAAY8C,GAAI4B,IAAWzD,SAAU,KACrC,kBAACkF,EAAA,EAAKA,KAAN,CAAWG,SAAS,QAClB,kBAACH,EAAA,EAAKI,KAAN,CAAYN,KAAK,OAAOnD,GAAG,IAAI0D,KAAK,QAAQpG,MAAO,CAACiG,MAAM,QAAU3F,QAAM,GAA1E,YAEF,kBAACyF,EAAA,EAAKA,KAAN,CAAWG,SAAS,QACR,kBAACH,EAAA,EAAKI,KAAN,CAAWxF,QAASqB,KAAK2D,eAAkBU,GAAG,eAAe3D,GAAI4D,IAAST,KAAK,OAAQX,OAAK,EAAClF,MAAO,CAACiG,MAAM,SAA3G,SACA,kBAACF,EAAA,EAAKI,KAAN,CAAWxF,QAASqB,KAAK2D,eAAmBU,GAAG,gBAAgB3D,GAAI4D,IAAST,KAAK,OAAQ7F,MAAO,CAACiG,MAAM,SAAvG,iBAIZ,kBAACrG,EAAA,EAAD,eAAY8C,GAAI4B,KAAe1E,IAAWC,YACxC,kBAACkG,EAAA,EAAKA,KAAN,CAAWG,SAAS,QACd,kBAACH,EAAA,EAAKI,KAAN,CAAWxF,QAAS,kBAAK,EAAKsB,SAAS,CAACuD,SAAQ,KAAQxF,MAAO,CAACiG,MAAM,SAC9D,kBAACM,EAAA,EAAD,CAAMV,KAAK,UAEnB,kBAACE,EAAA,EAAKI,KAAN,CAAazD,GAAG,IAAI0D,KAAK,QAAQ9F,QAAM,EAACN,MAAO,CAACiG,MAAM,SAAtD,cAIhB,6BACA,6BACA,kBAACO,EAAA,EAAQC,SAAT,KAEI,kBAACD,EAAA,EAAD,CACI9D,GAAIqD,IACJW,UAAU,UACVC,UAAU,OACVC,UAAQ,EACRpB,QAASxD,KAAKhB,MAAMwE,QACpBqB,OAAQ,kBAAK,EAAK5E,SAAS,CAACuD,SAAQ,MAGpC,kBAACO,EAAA,EAAKI,KAAN,CAAW7F,QAAM,EAACK,QAASqB,KAAK8E,SAChC,kBAACf,EAAA,EAAKI,KAAN,CAAWxF,QAASqB,KAAK2D,eAAgBjD,GAAG,IAAIpC,QAAM,EAAE8F,KAAK,SAA7D,WACA,kBAACL,EAAA,EAAKI,KAAN,CAAWxF,QAASqB,KAAK2D,eAAiBjD,GAAI4D,IAAST,KAAK,OAAOQ,GAAG,eAAenB,OAAK,GAA1F,SACA,kBAACa,EAAA,EAAKI,KAAN,CAAWxF,QAASqB,KAAK2D,eAAiBjD,GAAI4D,IAAST,KAAK,OAAOQ,GAAI,CAACU,SAAS,gBAAgBC,KAAK,UAAUC,OAAO,YAAvH,gBAGD,kBAACT,EAAA,EAAQU,OAAT,CAAgBC,OAAQnF,KAAKhB,MAAMwE,SAEhC,kBAAC5F,EAAA,EAAD,CAAY8C,GAAI4B,IAAYtE,MAAO,CAACoH,OAAO,SAAS7C,WAAW,QAC9D,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAU8C,SAAU,4CACjB,kBAAC,IAAD,CAAOrC,KAAK,gBAAgBG,UAAWC,IACvC,kBAAC,IAAD,CAAOJ,KAAK,cAAcG,UAAWJ,KAErC,kBAAC,IAAD,CAAOuC,OAAQ,kBAAM,8CACrB,kBAAC,IAAD,CAAOtC,KAAK,aAAaE,OAAK,EAACoC,OAAQ,kBAAM,0D,GAtEtD9D,aAiFJ+B","file":"static/js/14.a6740d72.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Posts\":\"PostWrapper_Posts__1f4ia\"};","import React,{Fragment} from 'react';\r\n\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Responsive\r\n    } from 'semantic-ui-react';\r\n//import classes from \"./Post.module.css\";\r\n\r\n//const data = ('<div className={classes.Post}><h1>{props.title}</h1><div className={classes.Info}><div className={classes.Author}>{props.author}</div></div></div>');\r\nconst Post = (props) => (\r\n\t           \r\n\t            <Fragment>\r\n\t               <Responsive {...Responsive.onlyMobile}>\r\n\t                    <Grid.Column style={{ marginBottom: \"0.5em\"}}>\r\n\t                        <Card link  fluid raised header={props.title} meta={props.author}  description='' onClick={props.clicked} />\r\n\t                    </Grid.Column>\r\n\t                </Responsive>\r\n\r\n\t                <Responsive minWidth={768}>\r\n\t                    <Grid.Column width={8} style={{ marginBottom: \"0.5em\"}}>\r\n\t                        <Card raised link header={props.title} meta={props.author}  description='' onClick={props.clicked} />\r\n\r\n\t                    </Grid.Column>\r\n\t                </Responsive>\r\n\t            </Fragment>\r\n);\r\n\r\nexport default Post;","import React, { Component} from 'react';\r\n\r\n//import axios from 'axios';\r\n\r\nimport axios from '../../../axios';\r\nimport {\r\n    Card,\r\n    Grid,\r\n    Responsive,\r\n    Button,\r\n    Segment,\r\n    Placeholder\r\n    } from 'semantic-ui-react';\r\n//import classes from \"./FullPost.module.css\";\r\n\r\nclass FullPost extends Component {\r\n\r\n    state ={\r\n        loadedPost : null,\r\n        loading: false,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading:true});\r\n        this.loadData();\r\n        \r\n    }\r\n\r\n    componentDidUpdate(){\r\n      this.loadData();\r\n    }\r\n  \r\n\r\n  loadData(){\r\n    const prop = this.props.match.params.id; \r\n         if (prop){\r\n            if(!this.state.loadedPost || (this.state.loadedPost.id !== +prop)){\r\n                axios.get('/posts/'+ prop)\r\n                     .then(response =>{\r\n                        if(response){\r\n                         this.setState({loadedPost:response.data});\r\n                        }\r\n                    })\r\n                   .catch(error=>{\r\n                      this.setState({loading:false});\r\n                      alert(\"Network error\",error);\r\n                   })\r\n            }\r\n        \r\n           }\r\n\r\n  }\r\n\r\n    deletePostHandler = () =>{\r\n        axios.delete('/posts/'+ this.props.match.params.id)\r\n        .then(response =>{\r\n                 console.log(response,'RESPONSE DATA');\r\n                    })\r\n                   .catch(error=>{\r\n                     alert(\"Network error\",error);\r\n               })\r\n    }\r\n        render() {\r\n        //const dta = ('<div className={classes.FullPost}><h1>Title</h1><p>Content</p><div className={classes.Edit}><button className={classes.Delete}>Delete</button></div></div>');\r\n\r\n        let post = (<Segment>\r\n                <Placeholder><Placeholder.Line/><Placeholder.Line/><Placeholder.Line/><Placeholder.Line/><Placeholder.Line/><Placeholder.Line/><Placeholder.Line/><Placeholder.Line/></Placeholder>\r\n                </Segment>\r\n                \r\n             );\r\n        if (!this.props.loading) {\r\n            if (this.state.loadedPost) {\r\n                post = (\r\n                <Responsive as={Grid}  style={{ marginTop: \"1em\"}}>\r\n                        <Grid.Row textAlign=\"center\" >\r\n                          <Grid.Column>\r\n                          <Card fluid centered>\r\n                            <Card.Content>\r\n                              <Card.Header>{this.state.loadedPost.title}</Card.Header>\r\n                              <Card.Meta>Emma</Card.Meta>\r\n                              <Card.Description>\r\n                                  {this.state.loadedPost.body}\r\n                              </Card.Description>\r\n                            </Card.Content>\r\n                            <Card.Content extra>\r\n                               <Button negative content='Delete' onClick={this.deletePostHandler} />\r\n                            </Card.Content>\r\n                          </Card>\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n              </Responsive> \r\n            );\r\n            }\r\n      }\r\n\r\n\r\n        \r\n        return post;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default FullPost;","import React, { Component,Fragment } from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport { Grid,Header,Container,Dimmer,Loader} from 'semantic-ui-react';\r\n\r\nimport axios from '../../axios';\r\nimport Post from './Post/Post';\r\nimport FullPost from './FullPost/FullPost';\r\nimport classes from \"./PostWrapper.module.css\";\r\n\r\n//const Posts = React.lazy(()=> import('../../components/PostWrapper/NewPost/NewPost'));\r\n\r\nclass PostWrapper extends Component {\r\n\tstate = {\r\n        posts:[],\r\n        SelectedPostId:null,\r\n        error:false,\r\n        loading:false\r\n    }\r\n\r\n    componentDidMount() {\r\n    \tthis.setState({loading:true});\r\n        axios.get('/posts')\r\n             .then(response =>{\r\n                 if(response){\r\n\t                 const posts = response.data.slice(0,4);\r\n\t                 const updatedPosts =  posts.map(post =>{\r\n\t                    return {\r\n\t                        ...post,\r\n\t                        author:'Emma'\r\n\t                    }\r\n\t                 });\r\n\t                 this.setState({loading:false,posts:updatedPosts});\r\n             }\r\n           })\r\n           .catch(error=>{\r\n\t         this.setState({error:true,loading:false});\r\n             alert(\"Network error\",error);\r\n           })\r\n           \r\n    }\r\n\r\n\r\n    postSelectorHandler = (id) =>{\r\n        //this.props.history.push({pathname:'/'+id});\r\n        this.props.history.push('/blog/posts/' + id);\r\n\r\n    }\r\n\r\n\trender() {\r\n\t\t const posts = this.state.posts.map(post=>{\r\n            return <Post identity={post.id} key={post.id}  title={post.title} author={post.author} clicked={()=>this.postSelectorHandler(post.id)} />;\r\n        });\r\n\t\t let content = null;\r\n\t\t if (this.state.loading){\r\n\t        content  = (\r\n\t              <Dimmer.Dimmable as={Container} textAlign='center' style={{paddingTop:\"40%\"}}>\r\n                    <Dimmer inverted active>\r\n                         <Loader size='large' inverted />\r\n                      </Dimmer>\r\n                  </Dimmer.Dimmable>\r\n\t       );\r\n\r\n        }else{\r\n\t\t\t if(this.state.error){\r\n\t\t\t \tcontent = (<div style={{textAlign:'center'}}><Header as='h2' >An Error occured</Header><p>Content could't be loaded,check connection..</p></div>)\r\n\t\t\t }else{\r\n\t\t\t \tcontent = posts.length > 0 ? posts : null;\r\n\t\t\t }\r\n\t\t}\r\n\r\n\t\t\t\treturn (\r\n\t\t\t  <Fragment>\r\n\t\t\t\t<section className={classes.Posts}>\r\n\t               <Grid >\r\n\t                <Grid.Row>\r\n\t                { content }\r\n\t                </Grid.Row>\r\n\t              </Grid>\r\n\t            </section>\r\n\t            <section>\r\n\t              <Route path={this.props.match.url+\"/:id\"} exact component={FullPost} />\r\n\t            </section>\r\n\t          </Fragment>\r\n\t          \r\n\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PostWrapper;","import React, { Component,Suspense  } from 'react'; //,Redirect\r\nimport {Route,NavLink,Switch} from 'react-router-dom';\r\n//import {Route,Link,Switch} from 'react-router-dom';\r\n//import axios from 'axios';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport {\r\n    Responsive,\r\n    Container, \r\n    Menu,Sidebar,\r\n    Icon\r\n\r\n    } from 'semantic-ui-react';\r\n\r\n\r\nimport Posts from '../../components/PostWrapper/PostWrapper';\r\n//import NewPost from '../../components/PostWrapper/NewPost/NewPost';\r\n//import AsyncComp from '../../hoc/asyncComp/asyncComp'; // OUR OWN IMPLEMENTATION OF LASY LOADING OR CODE SPLITTING\r\n\r\n// const AsyncNewPost = AsyncComp(()=>{\r\n//     return import('../../components/PostWrapper/NewPost/NewPost');\r\n// })\r\n//import NewPost from '../../components/PostWrapper/NewPost/NewPost';\r\n\r\nconst NewPost = React.lazy(()=> import('../../components/PostWrapper/NewPost/NewPost'));\r\n\r\nclass Blog extends Component {\r\n    state = {\r\n        visible:false,\r\n        activeItem: 'home',\r\n        auth:false\r\n    }\r\n\r\n    activeMenuItem = (e,{name}) =>{\r\n      this.setState({activeItem:name,visible:false});\r\n    }\r\n\r\n    render() {\r\n        //const res = this.state.result;\r\n        //this.state.auth ? <Route path=\"/newpost\" render=(()=>{<Supense fallback=(<div>loading</div>)><NewPost/></Supense>})/> : null}*/\r\n\r\n\r\n        setTimeout(()=>{\r\n            this.setState({auth:true});\r\n        },2500);\r\n        //const item_ = this.state.auth ? <Route path=\"/newpost\" component={AsyncNewPost} /> : null;\r\n        return (\r\n            <Aux><br />\r\n                <Menu fixed=\"top\" inverted color='white'>\r\n                    <Responsive as={Container} minWidth={768}>\r\n                    <Menu.Menu position=\"left\">\r\n                      <Menu.Item  name=\"home\" as='a' href=\"/blog\" style={{color:\"#fff\"}}  header >BlogApp</Menu.Item>\r\n                    </Menu.Menu>\r\n                    <Menu.Menu position=\"left\">\r\n                                <Menu.Item onClick={this.activeMenuItem}   to=\"/blog/posts/\" as={NavLink} name=\"home\"  exact style={{color:\"#fff\"}}>Posts</Menu.Item>\r\n                                <Menu.Item onClick={this.activeMenuItem}    to=\"/blog/newpost\" as={NavLink} name=\"post\"  style={{color:\"#fff\"}}>Create Post</Menu.Item>\r\n                    </Menu.Menu>\r\n                    </Responsive>\r\n\r\n                    <Responsive as={Container} {...Responsive.onlyMobile}>\r\n                      <Menu.Menu position=\"left\">\r\n                            <Menu.Item onClick={()=> this.setState({visible:true})} style={{color:\"#fff\"}}>\r\n                                    <Icon name='bars' />\r\n                            </Menu.Item>\r\n                            <Menu.Item   as='a' href=\"/blog\" header style={{color:\"#fff\"}}>BlogApp</Menu.Item>\r\n                    </Menu.Menu>\r\n                      </Responsive>\r\n            </Menu>\r\n            <br />\r\n            <br />\r\n            <Sidebar.Pushable>\r\n\r\n                <Sidebar \r\n                    as={Menu}\r\n                    animation=\"overlay\"\r\n                    direction=\"left\"\r\n                    vertical\r\n                    visible={this.state.visible}\r\n                    onHide={()=> this.setState({visible:false})}\r\n                    >\r\n                    \r\n                    <Menu.Item header onClick={this.unauth}></Menu.Item>\r\n                    <Menu.Item onClick={this.activeMenuItem} as='a' header  href=\"/blog\">BlogApp</Menu.Item>\r\n                    <Menu.Item onClick={this.activeMenuItem}  as={NavLink} name=\"home\" to=\"/blog/posts/\" exact>Posts</Menu.Item>\r\n                    <Menu.Item onClick={this.activeMenuItem}  as={NavLink} name=\"post\" to={{pathname:'/blog/newpost',hash:'#submit',search:'?q=true'}}>Create Post</Menu.Item>\r\n\r\n                    </Sidebar>\r\n                   <Sidebar.Pusher dimmed={this.state.visible}>\r\n                      {/*<Route path=\"/\" exact render={()=><h1>Home</h1>} />*/}\r\n                      <Responsive as={Container}  style={{height:\"1000px\",paddingTop:\"1em\"}}>\r\n                       <Switch>\r\n                         <Suspense fallback={<div>loading...</div>}>\r\n                            <Route path=\"/blog/newpost\" component={NewPost}/> \r\n                            <Route path=\"/blog/posts\" component={Posts} />\r\n                         </Suspense>\r\n                            <Route render={() => <h1> 404 ERROR </h1>}/>\r\n                            <Route path=\"/blog/user\" exact render={() => <h1> Invalid Path </h1>}/>\r\n                        </Switch>\r\n\r\n                      </Responsive>\r\n                </Sidebar.Pusher>\r\n            </Sidebar.Pushable>\r\n        </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Blog;"],"sourceRoot":""}