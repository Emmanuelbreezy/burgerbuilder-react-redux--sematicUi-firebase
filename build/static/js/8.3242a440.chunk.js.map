{"version":3,"sources":["hoc/withErrorHandler/withErrorHandler.js","components/Burger/BurgerIngredient/BurgerIndegredient.module.css","components/Burger/Burger.module.css","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BurgerControls/BurgerControls.module.css","components/Burger/BurgerControls/BurgerControl/BurgerControl.module.css","components/Burger/OrderSummary/OrderSummary.js","components/Burger/BurgerControls/BurgerControl/BurgerControl.js","components/Burger/BurgerControls/BurgerControls.js","components/UI/Modal/Modal.js","containers/BurgerBuilder/BurgerBuilder.js"],"names":["WithErrorHandler","WrappedComponent","axios","props","state","error","errorBoolean","errorConfirmedHandler","setState","console","log","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","this","open","transition","animation","duration","raised","vertical","compact","style","left","position","top","zIndex","onDismiss","floating","negative","icon","header","content","message","Component","module","exports","BurgerIngredient","ingredient","type","className","classes","BreadBottom","BreadTop","Seed1","Seed2","Meat","Cheese","Bacon","Salad","withRouter","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","OrderSummary","prevProps","prevState","snapshot","ingredientsSummary","List","Item","as","value","transform","fontSize","fontWeight","ordered","Header","price","toFixed","BurgerControl","width","label","Button","Group","onClick","removed","attached","basic","color","disabled","added","controls","BurgerControls","Container","fluid","margin","ctrl","data-test","ingredientAdded","ingredientRemoved","size","isAuth","purchasable","React","memo","TransitionablePortal","modalopen","Modal","onClose","event","close","centered","closeIcon","Content","Description","children","Actions","positive","purchaseClick","BurgerBuilder","purchasing","loadingSuccess","OpenModalHandler","isUserAuthenticatd","onSetAuthRedirectPath","history","push","CloseModalHandler","purchaseContinueHandler","onInitPurchase","onInitIngredient","sum","disabledInfo","ings","orderSummary","burger","Segment","Dimmer","Dimmable","textAlign","paddingTop","inverted","active","Loader","Responsive","Grid","onlyMobile","marginTop","Row","Column","onIngredientAdded","onIngredientRemove","totprice","updatepurchaseState","minWidth","loading","connect","burgerbuilder","totalPrice","auth","token","dispatch","ingName","burgerbuilderActions","path"],"mappings":"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","file":"static/js/8.3242a440.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport {Segment,Message,TransitionablePortal} from 'semantic-ui-react';\r\nimport Aux from '../Auxiliary/Auxiliary';\r\n\r\n\r\nconst WithErrorHandler = (WrappedComponent,axios) =>{\r\n\r\n  return class extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      console.log('CONSTRUCTOR');\r\n      this.reqInterceptor =  axios.interceptors.request.use(req =>{\r\n        this.setState({error:null,errorBoolean:false});\r\n        return req;\r\n      });\r\n      this.resInterceptor = axios.interceptors.response.use(res=>res,error=>{\r\n        this.setState({error:error,errorBoolean:true});\r\n      })\r\n    }\r\n  \tstate = {\r\n  \t\terror:null,\r\n  \t\terrorBoolean:false\r\n  \t}\r\n    \r\n\r\n  \t // componentDidMount(){\r\n  \t \t\r\n  \t // }\r\n\r\n     componentWillUnmount(){\r\n        axios.interceptors.request.eject(this.reqInterceptor);\r\n        axios.interceptors.request.eject(this.resInterceptor);\r\n     }\r\n\r\n  \t errorConfirmedHandler = () =>{\r\n  \t \tthis.setState({error:null,errorBoolean:false});\r\n  \t }\r\n  \trender(){\r\n\r\n  \t\treturn (\r\n\t\t\t<Aux>\r\n\t\t\t   <TransitionablePortal open={this.state.errorBoolean} transition={{animation:'fly right',duration:1000}}>\r\n                 <Segment raised vertical compact  style={{ \r\n                 \tleft:'5%',\r\n                 \tposition:'fixed',\r\n                 \ttop:'10%',\r\n                 \tzIndex:1000,\r\n                 }}>\r\n                 <Message \r\n                 onDismiss={this.errorConfirmedHandler}\r\n                 floating \r\n                 negative icon='exclamation triangle' \r\n                 header=\"We're sorry an error occured\" \r\n                 content={this.state.error ? this.state.error.message: null} />\r\n                </Segment>\r\n               </TransitionablePortal>\r\n\t\t\t   <WrappedComponent {...this.props} />\r\n\t\t\t</Aux>\r\n\t\t);\r\n  \t};\r\n  }  \r\n}\r\n\r\nexport default WithErrorHandler;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIndegredient_BreadBottom__3D2Ei\",\"BreadTop\":\"BurgerIndegredient_BreadTop__20Exo\",\"Seeds1\":\"BurgerIndegredient_Seeds1__J0kD0\",\"Seeds2\":\"BurgerIndegredient_Seeds2__2L9Nu\",\"Meat\":\"BurgerIndegredient_Meat__npV25\",\"Cheese\":\"BurgerIndegredient_Cheese__j1EKv\",\"Salad\":\"BurgerIndegredient_Salad__cD7M0\",\"Bacon\":\"BurgerIndegredient_Bacon__29wmD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__YRgdM\"};","import React from 'react';\r\n//import PropTypes from 'prop-types';\r\nimport classes from'./BurgerIndegredient.module.css';\r\n\r\nconst BurgerIngredient = (props) => {\r\n    let ingredient = null;\r\n    switch (props.type) {\r\n        case ('bread-bottom'):\r\n            ingredient = <div className={classes.BreadBottom}></div>\r\n            break;\r\n        case ('bread-top'):\r\n        ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seed1}></div>\r\n                    <div className={classes.Seed2}></div>\r\n                </div>\r\n            );\r\n            break;\r\n        case ('meat'):\r\n            ingredient = <div className={classes.Meat}></div>\r\n            break;\r\n        case ('cheese'):\r\n            ingredient = <div  className={classes.Cheese}></div>\r\n            break;\r\n        case ('bacon'):\r\n            ingredient = <div className={classes.Bacon}></div>\r\n            break;\r\n        case ('salad'):\r\n            ingredient = <div className={classes.Salad}></div>\r\n            break;\r\n        default:\r\n            ingredient = null\r\n    }\r\n    return ingredient;\r\n};\r\n\r\n\r\n// BurgerIngredient.PropTypes = {\r\n//     type: PropTypes.string.isRequired\r\n// };\r\n\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n//import {Container} from 'semantic-ui-react';\r\nimport BurgerIngredient from  './BurgerIngredient/BurgerIngredient';\r\nimport classes from'./Burger.module.css';\r\n\r\nconst Burger = props => {\r\n   let transformedIngredients = Object.keys(props.ingredients)\r\n        .map((igKey) =>{\r\n            return [...Array(props.ingredients[igKey])].map((_,i)=> {\r\n                return <BurgerIngredient key={igKey+i} type={igKey} />\r\n            });\r\n        })\r\n        .reduce((arr,el)=>{\r\n          return arr.concat(el)\r\n        }, []);\r\n    if(transformedIngredients.length === 0){\r\n       transformedIngredients = <h5>Please start adding ingredients!</h5>;\r\n    }\r\n    return (\r\n        <div className={classes.Burger}>\r\n          <BurgerIngredient type=\"bread-top\" />\r\n          {transformedIngredients}\r\n          <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\n\r\nexport default withRouter(Burger);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerControls\":\"BurgerControls_BurgerControls__3vkSG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BurgerControl\":\"BurgerControl_BurgerControl__1LwEn\"};","import React,{Component} from 'react';\r\nimport {\r\n    List,\r\n    Header\r\n    } from 'semantic-ui-react';\r\nimport Aux from '../../../hoc/Auxiliary/Auxiliary';\r\n\r\n\r\nclass OrderSummary extends Component{\r\n\r\n\r\n\r\n    componentDidUpdate(prevProps,prevState,snapshot) {\r\n        console.log('[OrderSummary] DidUpdate',prevProps,' ',snapshot);\r\n\r\n    }\r\n    \r\n\r\n    render(){\r\n        const ingredientsSummary = Object.keys(this.props.ingredients)\r\n                    .map(igKey =>{\r\n                        return (<List.Item as='li' value='*' key={igKey}><span style={{transform:\"capitalize\",fontSize:\"15px\",fontWeight:\"bold\"}}>{igKey}:  </span><span>{this.props.ingredients[igKey]}</span></List.Item>);\r\n                    });\r\n        return(\r\n\r\n            <Aux>\r\n                <p>A delicious burger with the following ingredients:</p>\r\n                <List as='ol' ordered>\r\n                    {ingredientsSummary}\r\n                </List>\r\n                <Header as=\"h4\">Total Price: {this.props.price.toFixed(2)}</Header>\r\n                <p>Continue to Checkout?</p>\r\n            </Aux>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderSummary;","import React from 'react';\r\nimport {\r\n  Button\r\n  } from 'semantic-ui-react';\r\nimport classes from './BurgerControl.module.css';\r\n\r\nconst BurgerControl = props => {\r\n    return (\r\n           <div className={classes.BurgerControl}>\r\n            <div style={{width:'100px'}}><h5>{props.label}</h5></div>\r\n            <div>\r\n              <Button.Group width='7'>\r\n              <Button onClick={props.removed} attached='left' \r\n                      basic color='grey' content='Less' icon='minus' \r\n                      disabled={props.disabled}\r\n                />\r\n              <Button onClick={props.added} attached='right' color='orange' content='More' icon='plus' />\r\n              </Button.Group>\r\n            </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default BurgerControl;","import React from 'react';\r\nimport {\r\n    Container,\r\n    Header,\r\n    Button\r\n    } from 'semantic-ui-react';\r\nimport classes from './BurgerControls.module.css';\r\nimport BurgerControl from './BurgerControl/BurgerControl';\r\n\r\n\r\nconst controls = [\r\n  {label:\"Salad\", type:\"salad\"},\r\n  {label:\"Bacon\", type:\"bacon\"},\r\n  {label:\"Cheese\", type:\"cheese\"},\r\n  {label:\"Meat\", type:\"meat\"},\r\n];\r\n\r\nconst BurgerControls = (props) =>{\r\n                       // disabled={props.disabled[ctrl.type]}\r\n                        //\r\n    //\r\n    return (\r\n    <Container fluid  className=\"BurgerControlsRend\">\r\n        <div className={classes.BurgerControls}>\r\n            <div style={{margin:\"2em\"}}><Header as=\"h3\" className=\"BurgerControlsHeader\">Current Price: {props.price.toFixed(2)}</Header></div>\r\n            {controls.map(ctrl =>(\r\n                <BurgerControl data-test=\"BurgerControlComp\"  key={ctrl.label} label={ctrl.label} \r\n                        added={()=>props.ingredientAdded(ctrl.type)} \r\n                        removed={()=>props.ingredientRemoved(ctrl.type)} \r\n\r\n                        />\r\n            ))}\r\n            <div style={{margin:\"2em\"}}><Button  onClick={props.ordered} size='huge'  color='green' content={props.isAuth ?'ORDER NOW': 'SIGN UP TO ORDER'} disabled={!props.purchasable} /></div>\r\n        </div>\r\n    </Container>\r\n    );\r\n};\r\n\r\nexport default BurgerControls;","import React from 'react';\r\nimport {Button,Modal,TransitionablePortal} from 'semantic-ui-react';\r\n\r\nconst ModalUI = props => {\r\n    return (\r\n     <TransitionablePortal \r\n           open={props.modalopen}\r\n           transition={{animation:'fly down',duration:1000}}\r\n           >\r\n        <Modal \r\n           open={props.modalopen}\r\n           onClose={(event)=>props.close()}\r\n           centered\r\n           closeIcon\r\n          >\r\n          <Modal.Header>YOUR ORDER</Modal.Header>\r\n          <Modal.Content>\r\n            <Modal.Description>\r\n                 {props.children}\r\n             </Modal.Description>\r\n          </Modal.Content> \r\n          <Modal.Actions>\r\n            <Button negative onClick={props.close}>Close</Button>\r\n            <Button positive color='orange' onClick={props.purchaseClick}>Continue</Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n        </TransitionablePortal>\r\n    );\r\n};\r\n\r\nexport default React.memo(ModalUI);","\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {Container,Grid,Responsive,Dimmer,Segment,Loader,Header} from 'semantic-ui-react';\r\nimport Aux from '../../hoc/Auxiliary/Auxiliary';\r\nimport WithErrorHandler from '../../hoc/withErrorHandler/withErrorHandler';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport BurgerControls from \"../../components/Burger/BurgerControls/BurgerControls\";\r\nimport ModalUI from \"../../components/UI/Modal/Modal\";\r\nimport axios from '../../axios';\r\nimport * as burgerbuilderActions from '../../store/actions/burgerAction/burgerIndex';\r\n\r\n\r\nexport class BurgerBuilder extends Component {\r\n    state = {\r\n        purchasing:false,\r\n        loadingSuccess:false,\r\n        \r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props);\r\n        this.props.onInitIngredient();\r\n        // axios.get('/ingredients.json')\r\n        //     .then((response) =>{\r\n        //          console.log(response,'RESPONSE DATA')\r\n        //          if(response){     \r\n        //             const dataF = response.data;\r\n        //             //const dataSorted = Object.keys(dataF).sort((a,b)=>{return dataF[b] - dataF[a]} );\r\n        //             const dataSorted = Object.entries(dataF).sort().reverse().reduce((obj,[k,v])=>({\r\n        //                 ...obj,\r\n        //                 [k]:v\r\n        //             }), {});\r\n        //             console.log(dataSorted);\r\n        //            this.setState({ingredients:dataSorted});\r\n        //          }else{\r\n        //             this.setState({error:true});\r\n        //          }\r\n        //    })\r\n        //     .catch((error)=>{\r\n        //           console.log(error,'Error DATA')\r\n        //            this.setState({loading:false,purchasing:false,error:true});\r\n        //    })\r\n    }\r\n\r\n\r\n\r\n\r\n    updatepurchaseState(ingredients){\r\n        const sum = Object.keys(ingredients)\r\n                    .map(igKey =>{\r\n                        return ingredients[igKey];\r\n                    })\r\n                    .reduce((sum,el)=>{\r\n                        return sum + el;\r\n                    },0);\r\n        return sum > 0;\r\n    }\r\n    // addIngredientHandler = (type) =>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = {\r\n    //             ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDIENT_PRICES[type];\r\n    //     const oldprice = this.state.totalPrice;\r\n    //     const newprice = oldprice + priceAddition;\r\n    //     this.setState({totalPrice: newprice, ingredients:updatedIngredients})\r\n    //     this.updatepurchaseState(updatedIngredients);\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) =>{\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if(oldCount <= 0){\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = {\r\n    //             ...this.state.ingredients\r\n    //     };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDIENT_PRICES[type];\r\n    //     const oldprice = this.state.totalPrice;\r\n    //     const newprice = oldprice - priceDeduction;\r\n    //     this.setState({totalPrice: newprice, ingredients:updatedIngredients})\r\n    //     this.updatepurchaseState(updatedIngredients);\r\n        \r\n    // }\r\n\r\n    OpenModalHandler = () => {\r\n        if (this.props.isUserAuthenticatd) {\r\n            this.setState({purchasing:true});\r\n        }else{\r\n            this.props.onSetAuthRedirectPath('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    CloseModalHandler = () => {\r\n        this.setState({purchasing:false});\r\n    }\r\n\r\n    purchaseContinueHandler = () => {\r\n        this.props.onInitPurchase();\r\n        // const queryParams = [];\r\n        // for(let i in this.props.ings){\r\n        //     queryParams.push(encodeURIComponent(i)+'='+ encodeURIComponent(this.props.ings[i]));\r\n        // }\r\n        // queryParams.push('price='+ this.props.totprice);\r\n        // const queryString = queryParams.join('&');\r\n        this.props.history.push('/checkout');\r\n         \r\n             \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n\r\n        const disabledInfo = {\r\n            ...this.props.ings\r\n        };\r\n        for (let key in disabledInfo){\r\n            disabledInfo[key] = disabledInfo[key] <= 0\r\n        }\r\n        \r\n        let orderSummary = null; \r\n\r\n        let burger = \r\n\r\n             this.props.error ? <Segment><Header as='h3'>Ingredients can't be loaded.</Header><p>Check your connection,Try again</p></Segment> :\r\n             (<Dimmer.Dimmable as={Container} textAlign='center' style={{paddingTop:\"40%\"}}>\r\n                    <Dimmer inverted active>\r\n                         <Loader size='large' inverted />\r\n                      </Dimmer>\r\n                  </Dimmer.Dimmable>\r\n             );\r\n\r\n\r\n            \r\n\r\n\r\n        if(this.props.ings){\r\n                burger = (\r\n                    <Aux>\r\n                    <Responsive as={Grid} {...Responsive.onlyMobile} textAlign=\"center\" style={{ marginTop: \"2em\"}}>\r\n                            <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Burger ingredients={this.props.ings}/>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <BurgerControls \r\n                                            ingredientAdded={this.props.onIngredientAdded}\r\n                                            ingredientRemoved={this.props.onIngredientRemove}\r\n                                            disabled={disabledInfo}\r\n                                            price={this.props.totprice}\r\n                                            purchasable={this.updatepurchaseState(this.props.ings)}\r\n                                            ordered={this.OpenModalHandler}\r\n                                            isAuth={this.props.isUserAuthenticatd}\r\n                                        \r\n                                            />\r\n                                </Grid.Column>\r\n                        </Grid.Row>\r\n                </Responsive>\r\n\r\n                 <Responsive as={Grid} minWidth={768} textAlign=\"center\" style={{ marginTop: \"1em\"}}>\r\n                            <Grid.Row >\r\n                            <Grid.Column width={7}>\r\n                                <Burger ingredients={this.props.ings}/>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <BurgerControls  \r\n                                            ingredientAdded={this.props.onIngredientAdded}\r\n                                            ingredientRemoved={this.props.onIngredientRemove}\r\n                                            disabled={disabledInfo}\r\n                                            price={this.props.totprice}\r\n                                            purchasable={this.updatepurchaseState(this.props.ings)}\r\n                                            ordered={this.OpenModalHandler}\r\n                                        \r\n                                            />\r\n                                </Grid.Column>\r\n                        </Grid.Row>\r\n                </Responsive> \r\n                </Aux>);\r\n\r\n                orderSummary = <OrderSummary ingredients={this.props.ings} price={this.props.totprice} />;\r\n                if (this.props.loading){\r\n                    orderSummary = (\r\n                          <Dimmer inverted active>\r\n                             <Loader inverted />\r\n                          </Dimmer>\r\n                    );\r\n\r\n                }\r\n        }\r\n\r\n\r\n\r\n       \r\n\r\n        return (\r\n            <Aux data-test=\"BurgerControlsAUX\">\r\n\r\n            \r\n            {this.state.purchasing ?\r\n               (<ModalUI modalopen={this.state.purchasing} close={this.CloseModalHandler} purchaseClick={this.purchaseContinueHandler}>\r\n                  {orderSummary}\r\n               </ModalUI>) : null\r\n            }\r\n\r\n            {burger}\r\n                \r\n            </Aux>\r\n            \r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ings:state.burgerbuilder.ingredients,\r\n        totprice:state.burgerbuilder.totalPrice,\r\n        error:state.burgerbuilder.error,\r\n        loading:state.burgerbuilder.loading,\r\n        isUserAuthenticatd: state.auth.token !== null\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onIngredientAdded:(ingName) => dispatch(burgerbuilderActions.addIngredient(ingName)),\r\n        onIngredientRemove:(ingName) => dispatch(burgerbuilderActions.removeIngredient(ingName)),\r\n        onInitIngredient:(ingName) => dispatch(burgerbuilderActions.initIngredients()),\r\n        onInitPurchase:() => dispatch(burgerbuilderActions.purchaseInit()),\r\n        onSetAuthRedirectPath:(path)=> dispatch(burgerbuilderActions.setAuthRedirectPath(path))\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(WithErrorHandler(BurgerBuilder,axios));"],"sourceRoot":""}