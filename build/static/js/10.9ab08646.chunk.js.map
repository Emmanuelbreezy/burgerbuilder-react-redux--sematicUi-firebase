{"version":3,"sources":["../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonGroup.js","../node_modules/semantic-ui-react/dist/es/elements/Button/ButtonOr.js","../node_modules/semantic-ui-react/dist/es/elements/Button/Button.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/GridRow.js","../node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js","components/CounterControl/CounterControl.module.css","components/CounterOutput/CounterPut.module.css","components/CounterControl/CounterControl.js","components/CounterOutput/CounterOutput.js","store/actions/result.js","containers/Counter/Counter.js","store/actions/counter.js"],"names":["ButtonContent","props","children","className","content","hidden","visible","classes","rest","getUnhandledProps","ElementType","getElementType","createElement","isNil","handledProps","propTypes","ButtonGroup","attached","basic","buttons","color","compact","floated","fluid","icon","inverted","labeled","negative","positive","primary","secondary","size","toggle","vertical","widths","button","create","ButtonOr","text","_Component","Button","_getPrototypeOf2","_this","this","_len","arguments","length","args","Array","_key","call","apply","concat","_this$props","label","_this$props2","disabled","tabIndex","ref","current","e","preventDefault","_this$props3","labelPosition","key","value","role","_this$props4","active","animated","circular","loading","baseClasses","hasIconClass","labeledClasses","wrapperClasses","computeElementType","computeTabIndex","buttonClasses","containerClasses","labelElement","Label","defaultProps","pointing","autoGenerateKey","onClick","handleClick","Ref","innerRef","undefined","Icon","hasChildren","computeButtonAriaRole","as","GridColumn","computer","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","GridRow","centered","columns","divided","reversed","Grid","celled","container","doubling","padded","relaxed","stackable","Column","Row","module","exports","CounterControl","clicked","CounterOutput","storeResult","res_","dispatch","setTimeout","type","actionTypes","ctrvalue","saveResult","Counter","state","counter","counterChangedHandler","action","setState","prevState","rst","storedResults","map","strR","id","onDeleteResult","Responsive","Container","style","marginTop","ctr","onIncrementCounter","counterAddHandler","counterMinusHandler","onStoreResult","Component","connect","res","results","val","actionCreators","ID"],"mappings":"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","file":"static/js/10.9ab08646.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\n * Used in some Button types, such as `animated`.\n */\n\nfunction ButtonContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\n\nButtonContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"hidden\", \"visible\"];\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","import _extends from \"@babel/runtime/helpers/extends\";\nimport _map from \"lodash/map\";\nimport _isNil from \"lodash/isNil\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey, useWidthProp } from '../../lib';\nimport Button from './Button';\n/**\n * Buttons can be grouped.\n */\n\nfunction ButtonGroup(props) {\n  var attached = props.attached,\n      basic = props.basic,\n      buttons = props.buttons,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      compact = props.compact,\n      content = props.content,\n      floated = props.floated,\n      fluid = props.fluid,\n      icon = props.icon,\n      inverted = props.inverted,\n      labeled = props.labeled,\n      negative = props.negative,\n      positive = props.positive,\n      primary = props.primary,\n      secondary = props.secondary,\n      size = props.size,\n      toggle = props.toggle,\n      vertical = props.vertical,\n      widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(basic, 'basic'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(icon, 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(labeled, 'labeled'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOnly(vertical, 'vertical'), useKeyOrValueAndKey(attached, 'attached'), useValueAndKey(floated, 'floated'), useWidthProp(widths), 'buttons', className);\n  var rest = getUnhandledProps(ButtonGroup, props);\n  var ElementType = getElementType(ButtonGroup, props);\n\n  if (_isNil(buttons)) {\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), childrenUtils.isNil(children) ? content : children);\n  }\n\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(buttons, function (button) {\n    return Button.create(button);\n  }));\n}\n\nButtonGroup.handledProps = [\"as\", \"attached\", \"basic\", \"buttons\", \"children\", \"className\", \"color\", \"compact\", \"content\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"labeled\", \"negative\", \"positive\", \"primary\", \"secondary\", \"size\", \"toggle\", \"vertical\", \"widths\"];\nButtonGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Groups can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** Groups can be less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Array of shorthand Button values. */\n  buttons: customPropTypes.collectionShorthand,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Groups can have a shared color. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Groups can reduce their padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** Groups can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** Groups can take the width of their container. */\n  fluid: PropTypes.bool,\n\n  /** Groups can be formatted as icons. */\n  icon: PropTypes.bool,\n\n  /** Groups can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Groups can be formatted as labeled icon buttons. */\n  labeled: PropTypes.bool,\n\n  /** Groups can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /** Groups can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** Groups can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** Groups can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** Groups can be formatted to toggle on and off. */\n  toggle: PropTypes.bool,\n\n  /** Groups can be formatted to appear vertically. */\n  vertical: PropTypes.bool,\n\n  /** Groups can have their widths divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default ButtonGroup;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\n/**\n * Button groups can contain conditionals.\n */\n\nfunction ButtonOr(props) {\n  var className = props.className,\n      text = props.text;\n  var classes = cx('or', className);\n  var rest = getUnhandledProps(ButtonOr, props);\n  var ElementType = getElementType(ButtonOr, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes,\n    \"data-text\": text\n  }));\n}\n\nButtonOr.handledProps = [\"as\", \"className\", \"text\"];\nButtonOr.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Or buttons can have their text localized, or adjusted by using the text prop. */\n  text: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : {};\nexport default ButtonOr;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _invoke from \"lodash/invoke\";\nimport _isNil from \"lodash/isNil\";\nimport { Ref } from '@stardust-ui/react-component-ref';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { Component, createRef } from 'react';\nimport { childrenUtils, customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useValueAndKey } from '../../lib';\nimport Icon from '../Icon/Icon';\nimport Label from '../Label/Label';\nimport ButtonContent from './ButtonContent';\nimport ButtonGroup from './ButtonGroup';\nimport ButtonOr from './ButtonOr';\n/**\n * A Button indicates a possible user action.\n * @see Form\n * @see Icon\n * @see Label\n */\n\nvar Button =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Button, _Component);\n\n  function Button() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Button);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Button)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"ref\", createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"computeElementType\", function () {\n      var _this$props = _this.props,\n          attached = _this$props.attached,\n          label = _this$props.label;\n      if (!_isNil(attached) || !_isNil(label)) return 'div';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"computeTabIndex\", function (ElementType) {\n      var _this$props2 = _this.props,\n          disabled = _this$props2.disabled,\n          tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      if (disabled) return -1;\n      if (ElementType === 'div') return 0;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"focus\", function () {\n      return _invoke(_this.ref.current, 'focus');\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClick\", function (e) {\n      var disabled = _this.props.disabled;\n\n      if (disabled) {\n        e.preventDefault();\n        return;\n      }\n\n      _invoke(_this.props, 'onClick', e, _this.props);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"hasIconClass\", function () {\n      var _this$props3 = _this.props,\n          labelPosition = _this$props3.labelPosition,\n          children = _this$props3.children,\n          content = _this$props3.content,\n          icon = _this$props3.icon;\n      if (icon === true) return true;\n      return icon && (labelPosition || childrenUtils.isNil(children) && _isNil(content));\n    });\n\n    return _this;\n  }\n\n  _createClass(Button, [{\n    key: \"computeButtonAriaRole\",\n    value: function computeButtonAriaRole(ElementType) {\n      var role = this.props.role;\n      if (!_isNil(role)) return role;\n      if (ElementType !== 'button') return 'button';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          active = _this$props4.active,\n          animated = _this$props4.animated,\n          attached = _this$props4.attached,\n          basic = _this$props4.basic,\n          children = _this$props4.children,\n          circular = _this$props4.circular,\n          className = _this$props4.className,\n          color = _this$props4.color,\n          compact = _this$props4.compact,\n          content = _this$props4.content,\n          disabled = _this$props4.disabled,\n          floated = _this$props4.floated,\n          fluid = _this$props4.fluid,\n          icon = _this$props4.icon,\n          inverted = _this$props4.inverted,\n          label = _this$props4.label,\n          labelPosition = _this$props4.labelPosition,\n          loading = _this$props4.loading,\n          negative = _this$props4.negative,\n          positive = _this$props4.positive,\n          primary = _this$props4.primary,\n          secondary = _this$props4.secondary,\n          size = _this$props4.size,\n          toggle = _this$props4.toggle;\n      var baseClasses = cx(color, size, useKeyOnly(active, 'active'), useKeyOnly(basic, 'basic'), useKeyOnly(circular, 'circular'), useKeyOnly(compact, 'compact'), useKeyOnly(fluid, 'fluid'), useKeyOnly(this.hasIconClass(), 'icon'), useKeyOnly(inverted, 'inverted'), useKeyOnly(loading, 'loading'), useKeyOnly(negative, 'negative'), useKeyOnly(positive, 'positive'), useKeyOnly(primary, 'primary'), useKeyOnly(secondary, 'secondary'), useKeyOnly(toggle, 'toggle'), useKeyOrValueAndKey(animated, 'animated'), useKeyOrValueAndKey(attached, 'attached'));\n      var labeledClasses = cx(useKeyOrValueAndKey(labelPosition || !!label, 'labeled'));\n      var wrapperClasses = cx(useKeyOnly(disabled, 'disabled'), useValueAndKey(floated, 'floated'));\n      var rest = getUnhandledProps(Button, this.props);\n      var ElementType = getElementType(Button, this.props, this.computeElementType);\n      var tabIndex = this.computeTabIndex(ElementType);\n\n      if (!_isNil(label)) {\n        var buttonClasses = cx('ui', baseClasses, 'button', className);\n        var containerClasses = cx('ui', labeledClasses, 'button', className, wrapperClasses);\n        var labelElement = Label.create(label, {\n          defaultProps: {\n            basic: true,\n            pointing: labelPosition === 'left' ? 'right' : 'left'\n          },\n          autoGenerateKey: false\n        });\n        return React.createElement(ElementType, _extends({}, rest, {\n          className: containerClasses,\n          onClick: this.handleClick\n        }), labelPosition === 'left' && labelElement, React.createElement(Ref, {\n          innerRef: this.ref\n        }, React.createElement(\"button\", {\n          className: buttonClasses,\n          \"aria-pressed\": toggle ? !!active : undefined,\n          disabled: disabled,\n          tabIndex: tabIndex\n        }, Icon.create(icon, {\n          autoGenerateKey: false\n        }), \" \", content)), (labelPosition === 'right' || !labelPosition) && labelElement);\n      }\n\n      var classes = cx('ui', baseClasses, wrapperClasses, labeledClasses, 'button', className);\n      var hasChildren = !childrenUtils.isNil(children);\n      var role = this.computeButtonAriaRole(ElementType);\n      return React.createElement(Ref, {\n        innerRef: this.ref\n      }, React.createElement(ElementType, _extends({}, rest, {\n        className: classes,\n        \"aria-pressed\": toggle ? !!active : undefined,\n        disabled: disabled && ElementType === 'button' || undefined,\n        onClick: this.handleClick,\n        role: role,\n        tabIndex: tabIndex\n      }), hasChildren && children, !hasChildren && Icon.create(icon, {\n        autoGenerateKey: false\n      }), !hasChildren && content));\n    }\n  }]);\n\n  return Button;\n}(Component);\n\n_defineProperty(Button, \"defaultProps\", {\n  as: 'button'\n});\n\n_defineProperty(Button, \"Content\", ButtonContent);\n\n_defineProperty(Button, \"Group\", ButtonGroup);\n\n_defineProperty(Button, \"Or\", ButtonOr);\n\n_defineProperty(Button, \"handledProps\", [\"active\", \"animated\", \"as\", \"attached\", \"basic\", \"children\", \"circular\", \"className\", \"color\", \"compact\", \"content\", \"disabled\", \"floated\", \"fluid\", \"icon\", \"inverted\", \"label\", \"labelPosition\", \"loading\", \"negative\", \"onClick\", \"positive\", \"primary\", \"role\", \"secondary\", \"size\", \"tabIndex\", \"toggle\"]);\n\nButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A button can show it is currently the active user selection. */\n  active: PropTypes.bool,\n\n  /** A button can animate to show hidden content. */\n  animated: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['fade', 'vertical'])]),\n\n  /** A button can be attached to other content. */\n  attached: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['left', 'right', 'top', 'bottom'])]),\n\n  /** A basic button is less pronounced. */\n  basic: PropTypes.bool,\n\n  /** Primary content. */\n  children: customPropTypes.every([PropTypes.node, customPropTypes.disallow(['label']), customPropTypes.givenProps({\n    icon: PropTypes.oneOfType([PropTypes.string.isRequired, PropTypes.object.isRequired, PropTypes.element.isRequired])\n  }, customPropTypes.disallow(['icon']))]),\n\n  /** A button can be circular. */\n  circular: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A button can have different colors */\n  color: PropTypes.oneOf([].concat(_toConsumableArray(SUI.COLORS), ['facebook', 'google plus', 'instagram', 'linkedin', 'twitter', 'vk', 'youtube'])),\n\n  /** A button can reduce its padding to fit into tighter spaces. */\n  compact: PropTypes.bool,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A button can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** A button can be aligned to the left or right of its container. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A button can take the width of its container. */\n  fluid: PropTypes.bool,\n\n  /** Add an Icon by name, props object, or pass an <Icon />. */\n  icon: customPropTypes.some([PropTypes.bool, PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A button can be formatted to appear on dark backgrounds. */\n  inverted: PropTypes.bool,\n\n  /** Add a Label by text, props object, or pass a <Label />. */\n  label: customPropTypes.some([PropTypes.string, PropTypes.object, PropTypes.element]),\n\n  /** A labeled button can format a Label or Icon to appear on the left or right. */\n  labelPosition: PropTypes.oneOf(['right', 'left']),\n\n  /** A button can show a loading indicator. */\n  loading: PropTypes.bool,\n\n  /** A button can hint towards a negative consequence. */\n  negative: PropTypes.bool,\n\n  /**\n   * Called after user's click.\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\n   * @param {object} data - All props.\n   */\n  onClick: PropTypes.func,\n\n  /** A button can hint towards a positive consequence. */\n  positive: PropTypes.bool,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  primary: PropTypes.bool,\n\n  /** The role of the HTML element. */\n  role: PropTypes.string,\n\n  /** A button can be formatted to show different levels of emphasis. */\n  secondary: PropTypes.bool,\n\n  /** A button can have different sizes. */\n  size: PropTypes.oneOf(SUI.SIZES),\n\n  /** A button can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /** A button can be formatted to toggle on and off. */\n  toggle: PropTypes.bool\n} : {};\nButton.create = createShorthandFactory(Button, function (value) {\n  return {\n    content: value\n  };\n});\nexport default Button;","import _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A column sub-component for Grid.\n */\n\nfunction GridColumn(props) {\n  var children = props.children,\n      className = props.className,\n      computer = props.computer,\n      color = props.color,\n      floated = props.floated,\n      largeScreen = props.largeScreen,\n      mobile = props.mobile,\n      only = props.only,\n      stretched = props.stretched,\n      tablet = props.tablet,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign,\n      widescreen = props.widescreen,\n      width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridColumn.handledProps = [\"as\", \"children\", \"className\", \"color\", \"computer\", \"floated\", \"largeScreen\", \"mobile\", \"only\", \"stretched\", \"tablet\", \"textAlign\", \"verticalAlign\", \"widescreen\", \"width\"];\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** A column can specify a width for a computer. */\n  computer: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n\n  /** A column can specify a width for a large screen device. */\n  largeScreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify a width for a mobile device. */\n  mobile: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n\n  /** A column can specify a width for a tablet device. */\n  tablet: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n\n  /** A column can specify a width for a wide screen device. */\n  widescreen: customPropTypes.every([customPropTypes.disallow(['width']), PropTypes.oneOf(SUI.WIDTHS)]),\n\n  /** Represents width of column. */\n  width: customPropTypes.every([customPropTypes.disallow(['computer', 'largeScreen', 'mobile', 'tablet', 'widescreen']), PropTypes.oneOf(SUI.WIDTHS)])\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\n/**\n * A row sub-component for Grid.\n */\n\nfunction GridRow(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      color = props.color,\n      columns = props.columns,\n      divided = props.divided,\n      only = props.only,\n      reversed = props.reversed,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx(color, useKeyOnly(centered, 'centered'), useKeyOnly(divided, 'divided'), useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'row', className);\n  var rest = getUnhandledProps(GridRow, props);\n  var ElementType = getElementType(GridRow, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGridRow.handledProps = [\"as\", \"centered\", \"children\", \"className\", \"color\", \"columns\", \"divided\", \"only\", \"reversed\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGridRow.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A row can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A grid row can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Represents column count per line in Row. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A row can have dividers between its columns. */\n  divided: PropTypes.bool,\n\n  /** A row can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n\n  /** A row can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A row can stretch its contents to take up the entire column height. */\n  stretched: PropTypes.bool,\n\n  /** A row can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A row can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default GridRow;","import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\n * A grid is used to harmonize negative space in a layout.\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n      centered = props.centered,\n      children = props.children,\n      className = props.className,\n      columns = props.columns,\n      container = props.container,\n      divided = props.divided,\n      doubling = props.doubling,\n      inverted = props.inverted,\n      padded = props.padded,\n      relaxed = props.relaxed,\n      reversed = props.reversed,\n      stackable = props.stackable,\n      stretched = props.stretched,\n      textAlign = props.textAlign,\n      verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\n\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CounterControl\":\"CounterControl_CounterControl__2V2YO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CounterOutput\":\"CounterPut_CounterOutput__VdkEM\"};","import React from 'react';\r\n\r\nimport classes from './CounterControl.module.css';\r\n\r\nconst CounterControl = (props) => (\r\n    <div className={classes.CounterControl} onClick={props.clicked}>\r\n        {props.label}\r\n    </div>\r\n);\r\n\r\nexport default CounterControl;","import React from 'react';\r\n\r\nimport classes from './CounterPut.module.css';\r\n//import './CounterOutput.css';\r\n\r\n\r\nconst CounterOutput = (props) => {\r\n\t// const style = {\r\n\t//     width: \"100%\",\r\n\t//     backgroundColor: \"#fa923f\",\r\n\t//     color: \"#fff\",\r\n\t//     fontSize: \"1.8rem\",\r\n\t//     textAlign: \"center\",\r\n\t//     padding: \"20px 0\",\r\n\t//     boxSizing: \"border-box\",\r\n\t// } \r\n\treturn (\r\n\t    <div className={classes.CounterOutput}>\r\n\t        Current Counter: {props.value}\r\n\t    </div>\r\n    );\r\n}\r\n\r\nexport default CounterOutput;","import * as actionTypes from './actionTypes';\r\n\r\n\r\nexport const saveResult = (res_)=>{\r\n\treturn{\r\n\t\ttype:actionTypes.STORE_RESULT,\r\n\t\tctrvalue:res_\r\n\t};\r\n}\r\n\r\nexport const storeResult = (res_)=>{\r\n\treturn (dispatch)=>{ // getStateA\r\n\t setTimeout(() =>  {\r\n\t \t// const oldCounter = getState().ctr.counter; // OLD STATE SHOULD NOT BE GOTTEN FROM HERE\r\n\t \t// dispatch(saveResult(oldCounter));\r\n\t \tdispatch(saveResult(res_));\r\n\t }, 2000);\r\n\t}\r\n};\r\n\r\nexport const deleteResult = (id)=>{\r\n\treturn{\r\n\t\ttype:actionTypes.DELETE_RESULT,\r\n\t\tID:id\r\n\t};\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nimport {Grid,Responsive,Button,Container} from 'semantic-ui-react';\r\nimport CounterControl from '../../components/CounterControl/CounterControl';\r\nimport CounterOutput from '../../components/CounterOutput/CounterOutput';\r\n//import * as actionTypes from \"../../store/action\";\r\nimport * as actionCreators from \"../../store/actions/index\";\r\n\r\nclass Counter extends Component {\r\n    state = {\r\n        counter: 0\r\n    }\r\n\r\n    counterChangedHandler = ( action, value ) => {\r\n        switch ( action ) {\r\n            case 'inc':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter + 1 } } )\r\n                break;\r\n            case 'dec':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter - 1 } } )\r\n                break;\r\n            case 'add':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter + value } } )\r\n                break;\r\n            case 'sub':\r\n                this.setState( ( prevState ) => { return { counter: prevState.counter - value } } )\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const rst = this.props.storedResults.map( (strR) => {\r\n                      return <li key={strR.id} onClick={() => this.props.onDeleteResult(strR.id)}>{strR.value}</li>\r\n                    })\r\n        return (\r\n            <Responsive as={Container} textAlign=\"center\" style={{ marginTop: \"1em\"}}>\r\n                        <Grid>\r\n                            <Grid.Row >\r\n                            <Grid.Column>\r\n                                <CounterOutput value={this.props.ctr} />\r\n                                <CounterControl label=\"Increment\" clicked={this.props.onIncrementCounter} />\r\n                                <CounterControl label=\"Decrement\" clicked={this.props.counterChangedHandler}  />\r\n                                <CounterControl label=\"Add 10\" clicked={this.props.counterAddHandler}  />\r\n                                <CounterControl label=\"Subtract 15\" clicked={this.props.counterMinusHandler}  />\r\n                                <br />\r\n                                <Button color=\"black\" onClick={()=>this.props.onStoreResult(this.props.ctr)}>Store Result</Button>\r\n\r\n                                <hr />\r\n                                <ul>\r\n                                    {rst}\r\n                                </ul>\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n         </Responsive>\r\n                  \r\n            \r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ctr: state.ctr.counter,\r\n        storedResults: state.res.results\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        onIncrementCounter:() => dispatch(actionCreators.increment()),\r\n        counterChangedHandler:() => dispatch(actionCreators.decrement()),\r\n        counterAddHandler:() => dispatch(actionCreators.add(10)),\r\n        counterMinusHandler:() => dispatch(actionCreators.subtract(15)),\r\n        onStoreResult: (res_) => dispatch(actionCreators.storeResult(res_)),\r\n        onDeleteResult: (id) => dispatch(actionCreators.deleteResult(id)),\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Counter);","import * as actionTypes from './actionTypes';\r\nexport const increment = ()=>{\r\n\treturn{\r\n\t\ttype:actionTypes.INCREMENT\r\n\t};\r\n};\r\n\r\nexport const decrement = ()=>{\r\n\treturn{\r\n\t\ttype:actionTypes.DECREMENT\r\n\t};\r\n};\r\nexport const add = (value)=>{\r\n\treturn{\r\n\t\ttype:actionTypes.ADD,\r\n\t\tval:value\r\n\t};\r\n};\r\nexport const subtract = (value)=>{\r\n\treturn{\r\n\t\ttype:actionTypes.SUBTRACT,\r\n\t\tval:value\r\n\t};\r\n};"],"sourceRoot":""}